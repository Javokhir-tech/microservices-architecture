version: '3'

volumes:
  db: {}

networks:
  song-net:
    driver: bridge

services:

  db:
    container_name: microservice_db
    image: postgres:13.4-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db:/var/lib/postgresql/data
    networks:
      - song-net

  localstack:
    hostname: localstack
    image: localstack/localstack
    ports:
      - "4566-4583:4566-4583"
    environment:
      - DEBUG=1
      - LOCALSTACK_HOSTNAME=localhost
      - USE_SSL=0
      - AWS_CBOR_DISABLE=1
      - SERVICES=s3
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=localstack
      - AWS_SECRET_ACCESS_KEY=localstack
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ../scripts/aws/buckets.sh:/docker-entrypoint-initaws.d/buckets.sh
    networks:
      - song-net

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - song-net

  song-service:
    container_name: song-service
    build:
      context: ../SongService
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - song-net
    environment:
      - SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL_SONG
      - SPRING_DATASOURCE_USERNAME=$DB_USERNAME
      - SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD
      - SERVICE_URL_DEFAULT_ZONE=$EUREKA_CLIENT_SERVICE_URL

  resource-service:
    container_name: resource-service
    build:
      context: ../ResourceService
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    networks:
      - song-net
    environment:
      - SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL_RESOURCE
      - SPRING_DATASOURCE_USERNAME=$DB_USERNAME
      - SPRING_DATASOURCE_PASSWORD=$DB_PASSWORD
      - CONFIG_AWS_S3_URL=$CONFIG_AWS_S3_URL
      - CONFIG_AWS_S3_BUCKET_NAME=$CONFIG_AWS_S3_BUCKET_NAME
      - CONFIG_AWS_S3_ACCESS_KEY=$CONFIG_AWS_S3_ACCESS_KEY
      - CONFIG_AWS_S3_SECRET_KEY=$CONFIG_AWS_S3_SECRET_KEY
      - CONFIG_AWS_REGION=$CONFIG_AWS_REGION
      - SPRING_RABBITMQ_HOST=$SPRING_RABBITMQ_HOST
      - SPRING_RABBITMQ_PORT=$SPRING_RABBITMQ_PORT
      - SPRING_RABBITMQ_USERNAME=$SPRING_RABBITMQ_USERNAME
      - SPRING_RABBITMQ_PASSWORD=$SPRING_RABBITMQ_PASSWORD
      - SERVICE_URL_DEFAULT_ZONE=$EUREKA_CLIENT_SERVICE_URL

  resource-processor:
    container_name: resource-processor
    build:
      context: ../ResourceProcessor
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - song-net
    environment:
      - SERVICE_URL_DEFAULT_ZONE=$EUREKA_CLIENT_SERVICE_URL
      - SPRING_RABBITMQ_HOST=$SPRING_RABBITMQ_HOST
      - SPRING_RABBITMQ_PORT=$SPRING_RABBITMQ_PORT
      - SPRING_RABBITMQ_USERNAME=$SPRING_RABBITMQ_USERNAME
      - SPRING_RABBITMQ_PASSWORD=$SPRING_RABBITMQ_PASSWORD

  gateway-service:
    container_name: gateway-service
    build:
      context: ../GatewayService
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - song-net
    environment:
      - SERVICE_URL_DEFAULT_ZONE=$EUREKA_CLIENT_SERVICE_URL

  discovery-service:
    container_name: discovery-service
    build:
      context: ../DiscoveryService
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - song-net

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus_config/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - song-net

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - song-net

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    ports:
      - '8080:8080'
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_FRONTEND_URL: http://localhost:8080
    command:
      - start-dev
    volumes:
      - .local/keycloak/:/opt/jboss/keycloak/standalone/data/
